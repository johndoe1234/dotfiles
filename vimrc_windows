let s:ruby_path = 'C:\Ruby193\bin'

let g:vimrcLocation = g:dotFilesLocation . 'vimrc'
let g:vimrcWindows = 'vimrc_windows'
let g:vimrcWindowsLocation = g:dotFilesLocation . g:vimrcWindows

nnoremap <silent> <leader>ev :execute "e " . g:vimrcLocation <CR>
nnoremap <silent> <leader>ew :execute "e " . g:vimrcWindowsLocation <CR>
nnoremap <silent> <leader>sv :execute "so " . g:vimrcLocation <CR>

autocmd! bufwritepost vimrc :execute "so " . g:vimrcLocation
autocmd! bufwritepost vimrc_windows :execute "so " . g:vimrcLocation
autocmd BufRead *.xml :% !xmllint.exe % --format

au GUIEnter * simalt ~x "x on an English Windows version. n on a French one

colorscheme desert

set undodir=~/.vimundo
set tags+=c:\tags\cpp
set tags+=OAMtags
" build tags of your own project with Ctrl-F12
map <C-F10> :silent !ctags -R -L ctags_includes --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q -f OAMtags<CR>
map <C-F11> :silent !cscope -b -R<CR>
map <C-F12> :silent !ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" OmniCppComplete
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_MayCompleteDot = 1 " autocomplete after .
let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]

let g:clang_use_library=1
let g:clang_library_path="C:/clang/3.2/bin/"
nnoremap <Leader>q :call g:ClangUpdateQuickFix()<CR>
let g:clang_complete_auto = 1
let g:clang_complete_copen = 1
let g:clang_auto_select=1
"let g:clang_hl_errors=1
"let g:clang_periodic_quickfix=1
"let g:clang_snippets=1
"let g:clang_snippets_engine='ultisnips'
"let g:clang_conceal_snippets=1
let g:clang_exec="clang++"
let g:clang_user_options=""
let g:clang_auto_user_options="path, .clang_complete"
let g:clang_sort_algo="priority"
let g:clang_complete_macros=1
let g:clang_complete_patterns=1
let g:clang_trailing_placeholder=1 " add trailing placeholder after function
let g:clang_close_preview=1 " close preview window after completion


set makeprg=clang++\ %
nnoremap <Leader>m :make<CR><CR>
